version: '3.8'

# Production Docker Compose Configuration
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

services:
  # =============================================================================
  # APPLICATION SERVICES (PRODUCTION OVERRIDES)
  # =============================================================================

  backend:
    build:
      target: production
    restart: always
    environment:
      # Production settings
      DEBUG: false
      ENVIRONMENT: production
      DEV_MODE: false
      HOT_RELOAD: false
      
      # Security
      BACKEND_CORS_ORIGINS: '["https://yourdomain.com","https://www.yourdomain.com"]'
      
      # Logging
      LOG_LEVEL: INFO
      
      # Performance
      DB_POOL_SIZE: 20
      DB_MAX_OVERFLOW: 40
      
      # Rate limiting
      RATE_LIMIT_PER_MINUTE: 30
      RATE_LIMIT_PER_HOUR: 500
    volumes:
      # Remove development volume mounts
      - ./logs:/app/logs
      - ./data/scraped:/app/data/scraped
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: '2.0'
        reservations:
          memory: 1g
          cpus: '1.0'
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
      rollback_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  frontend:
    build:
      target: production
    restart: always
    environment:
      # Production API URLs
      VITE_API_BASE_URL: https://api.yourdomain.com
      VITE_API_URL: https://api.yourdomain.com/api/v1
      VITE_WS_URL: wss://api.yourdomain.com/ws
      
      # Production settings
      VITE_NODE_ENV: production
      VITE_ENABLE_DEBUG_MODE: false
      VITE_USE_MOCK_DATA: false
      VITE_SHOW_DEV_TOOLS: false
    volumes:
      # Remove development volume mounts
      []
    deploy:
      resources:
        limits:
          memory: 1g
          cpus: '1.0'
        reservations:
          memory: 512m
          cpus: '0.5'
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  # =============================================================================
  # DATABASE SERVICES (PRODUCTION OVERRIDES)
  # =============================================================================

  postgres:
    restart: always
    environment:
      # Production tuning
      POSTGRES_SHARED_PRELOAD_LIBRARIES: pg_stat_statements
      POSTGRES_MAX_CONNECTIONS: 200
      POSTGRES_SHARED_BUFFERS: 256MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 1GB
      POSTGRES_WORK_MEM: 4MB
      POSTGRES_MAINTENANCE_WORK_MEM: 64MB
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
      - ./backups:/backups
      - ./scripts/postgres-prod.conf:/etc/postgresql/postgresql.conf:ro
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: '2.0'
        reservations:
          memory: 1g
          cpus: '1.0'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  redis:
    restart: always
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --appendonly yes
      --appendfsync everysec
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: '1.0'
        reservations:
          memory: 256m
          cpus: '0.5'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  # =============================================================================
  # SELENIUM (PRODUCTION SCALING)
  # =============================================================================

  selenium:
    restart: always
    environment:
      SE_NODE_MAX_SESSIONS: 5
      SE_NODE_MAX_INSTANCES: 5
      # Remove VNC in production
      SE_START_XVFB: false
    ports:
      # Remove VNC port in production
      - "${SELENIUM_PORT:-4444}:4444"
    deploy:
      resources:
        limits:
          memory: 4g
          cpus: '3.0'
        reservations:
          memory: 2g
          cpus: '2.0'
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3

  # =============================================================================
  # PRODUCTION SERVICES
  # =============================================================================

  nginx:
    image: nginx:alpine
    container_name: miasma-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./ssl:/etc/ssl/certs:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - miasma-network
    deploy:
      resources:
        limits:
          memory: 256m
          cpus: '0.5'

  # Backup service
  backup:
    image: postgres:15-alpine
    container_name: miasma-backup
    restart: "no"
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh:ro
    depends_on:
      - postgres
    networks:
      - miasma-network
    command: ["/bin/sh", "/backup.sh"]
    profiles:
      - backup

  # Log aggregation
  fluentd:
    image: fluentd:latest
    container_name: miasma-fluentd
    restart: always
    volumes:
      - ./logs:/fluentd/log
      - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf:ro
    networks:
      - miasma-network
    profiles:
      - monitoring

# =============================================================================
# PRODUCTION VOLUMES
# =============================================================================

volumes:
  postgres_data:
    external: true
    name: miasma-postgres-data
  
  redis_data:
    external: true  
    name: miasma-redis-data